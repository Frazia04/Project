/*
Refactor the uploads table:
- Split the team column (single string of form 'group|team') into two columns
- Use userid instead of studentid
- DROP CONSTRAINT fk__testresult__sheets (already transitive through fk__uploads__assignments)
*/

-- Rename existing constraints such that we can re-use those names
ALTER TABLE uploads RENAME CONSTRAINT pk__uploads TO old_pk__uploads;
ALTER TABLE uploads RENAME CONSTRAINT fk__uploads__assignments TO old_fk__uploads__assignments;

CREATE TABLE uploads2
(
    id                 INT          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    exercise           VARCHAR(50)  NOT NULL,
    sheet              VARCHAR(50)  NOT NULL,
    groupid            VARCHAR(50)  NOT NULL,
    teamid             VARCHAR(50)  NOT NULL,
    assignment         VARCHAR(50)  NOT NULL,
    filename           VARCHAR(200) NOT NULL,
    upload_date        TIMESTAMP    NOT NULL,
    uploader_userid    INT          NULL, -- null for backwards compatibility
    delete_date        TIMESTAMP    NULL,
    deleter_userid     INT          NULL,

    CONSTRAINT pk__uploads PRIMARY KEY (id),
    CONSTRAINT fk__uploads__assignments FOREIGN KEY (assignment, exercise, sheet) REFERENCES assignments (id, exercise, sheet)

    -- Added later:
    -- CONSTRAINT fk__uploads_uploader__students FOREIGN KEY (uploader_userid, exercise) REFERENCES students(userid, exerciseid)
    -- CONSTRAINT fk__uploads_deleter__students FOREIGN KEY (deleter_userid, exercise) REFERENCES students(userid, exerciseid)
);

-- Move data
INSERT INTO uploads2 (id,   exercise,   sheet, groupid,                                                               teamid,                                                 assignment,   filename,   upload_date, uploader_userid, delete_date, deleter_userid)
SELECT              u.id, u.exercise, u.sheet, SUBSTRING(u.team FROM 1 FOR GREATEST(0, POSITION('|' IN u.team) - 1)), SUBSTRING(u.team FROM (POSITION('|' IN u.team) + 1)), u.assignment, u.filename, u.upload_date, uu.userid,     u.delete_date, du.userid
FROM uploads AS u
LEFT JOIN users AS uu ON uu.studentid = u.uploader_studentid
LEFT JOIN users AS du ON du.studentid = u.deleter_studentid;

-- Fix id sequence
SELECT setval(pg_get_serial_sequence('uploads2', 'id'), COALESCE(MAX(id) + 1, 1), false) FROM uploads2;

-- Delete constraints referencing the old table
ALTER TABLE annotations DROP CONSTRAINT fk__annotations__uploads;
ALTER TABLE unread      DROP CONSTRAINT fk__unread__uploads;
ALTER TABLE warnings    DROP CONSTRAINT fk__warnings__uploads;

-- Replace old table by new one
DROP TABLE uploads;
ALTER TABLE uploads2 RENAME TO uploads;

-- Re-create the constraints deleted above
ALTER TABLE annotations ADD CONSTRAINT fk__annotations__uploads FOREIGN KEY (fileid) REFERENCES uploads(id);
ALTER TABLE unread      ADD CONSTRAINT fk__unread__uploads      FOREIGN KEY (fileid) REFERENCES uploads(id);
ALTER TABLE warnings    ADD CONSTRAINT fk__warnings__uploads    FOREIGN KEY (fileid) REFERENCES uploads(id);

-- Ensure that students with uploads are registered for the corresponding exercise
INSERT INTO students (userid, exerciseid)
SELECT DISTINCT uploader_userid, exercise
FROM uploads
WHERE uploader_userid IS NOT NULL
UNION
SELECT DISTINCT deleter_userid,  exercise
FROM uploads
WHERE deleter_userid IS NOT NULL
ON CONFLICT DO NOTHING
;

ALTER TABLE uploads
ADD CONSTRAINT fk__uploads_uploader__students FOREIGN KEY (uploader_userid, exercise) REFERENCES students(userid, exerciseid);

ALTER TABLE uploads
ADD CONSTRAINT fk__uploads_deleter__students FOREIGN KEY (deleter_userid, exercise) REFERENCES students(userid, exerciseid);
